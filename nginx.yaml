apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.version: 1.2.0
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  type: LoadBalancer
  selector:
    io.kompose.service: nginx
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-config
data:
  default.conf: |

      server {
          server_name  ____;
          listen 80 default_server;
          return 301 https://$host$request_uri;
      }

      server {
          server_name  ____;
          listen 443 ssl http2;

          ssl_certificate     /secrets/tls-secret/tls.crt;
          ssl_certificate_key /secrets/tls-secret/tls.key;
          ssl_session_cache  builtin:1000  shared:SSL:10m;
          ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
          ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
          ssl_prefer_server_ciphers on;

          client_max_body_size 5M;
          # DYNAMIC CONTENT
          location / {
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header Host $http_host;
              # we don't want nginx trying to do something clever with
              # redirects, we set the Host: header above already.
              proxy_redirect off;
              proxy_pass http://redash:5000;
          }
      }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.version: 1.2.0
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: nginx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: type
                operator: In
                values:
                - static
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: type
                operator: In
                values:
                - static
      containers:
        - image: nginx:1.15.6-alpine
          imagePullPolicy: Always
          name: nginx
          ports:
          - containerPort: 80
            name: http
          - containerPort: 443
            name: https
          volumeMounts:
          - name: tls-secret
            mountPath: /secrets/tls-secret
            readOnly: true
          - name: api-configs
            mountPath: /etc/nginx/conf.d
          # [END proxy_container]
          # [START volumes]
      volumes:
      - name: tls-secret
        secret:
          secretName: tls-secret
      - name: api-configs
        configMap:
          name: api-config